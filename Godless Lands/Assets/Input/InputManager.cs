//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input/InputManager.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputManager : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputManager()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputManager"",
    ""maps"": [
        {
            ""name"": ""Keyboard"",
            ""id"": ""18bb2ed9-77cb-4012-920d-2596b21590e2"",
            ""actions"": [
                {
                    ""name"": ""PressF"",
                    ""type"": ""Button"",
                    ""id"": ""24efb2e8-3296-46c3-8879-abcf36f49447"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar_F1"",
                    ""type"": ""Button"",
                    ""id"": ""1f40e2b9-79eb-45db-855a-2861e7e36f84"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar_F2"",
                    ""type"": ""Button"",
                    ""id"": ""1b2dc687-02c3-465c-b62f-85c1caaaaae3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar_F3"",
                    ""type"": ""Button"",
                    ""id"": ""a5bbc30b-5a9e-42a3-96e7-6f27001a9c92"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar_F4"",
                    ""type"": ""Button"",
                    ""id"": ""a076a2dd-77a1-49c2-8d8d-c5ef5aefb849"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar_F5"",
                    ""type"": ""Button"",
                    ""id"": ""a843b4c7-7b2a-4d9b-bd5b-1e28d9a0da51"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar_F6"",
                    ""type"": ""Button"",
                    ""id"": ""c72e8017-304a-4a73-a084-f6420abacbc2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar_F7"",
                    ""type"": ""Button"",
                    ""id"": ""53575888-9663-4272-b06b-34cd3710abff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar_F8"",
                    ""type"": ""Button"",
                    ""id"": ""33d76eba-e2bd-46ee-b6e7-607b4c778067"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchCombat"",
                    ""type"": ""Button"",
                    ""id"": ""239510f5-43ef-4f5b-8231-3783612231ef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ecb271f4-1de7-4aa7-83cd-4055a800a9b2"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""PressF"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""477b60ef-a5e4-4d7d-bf75-28c9933f947f"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar_F1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07c58058-9d2f-4e08-8925-32f71c4e16c3"",
                    ""path"": ""<Keyboard>/f2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar_F2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89dce2b3-1d04-4767-b58e-2998adf7951c"",
                    ""path"": ""<Keyboard>/f3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar_F3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7da7529e-8831-42da-82f8-6127d69f8019"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and Mouse"",
                    ""action"": ""SwitchCombat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b85fef1c-1161-4ef2-abb0-6131875717e0"",
                    ""path"": ""<Keyboard>/f4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar_F4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1bb91f0a-197e-4ec5-a62e-916c7b063b8a"",
                    ""path"": ""<Keyboard>/f5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar_F5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5027608d-6acd-4ee5-9726-0e0b54c365c1"",
                    ""path"": ""<Keyboard>/f6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar_F6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9054f2c-d5b5-4287-92c1-ee4c810f452d"",
                    ""path"": ""<Keyboard>/f7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar_F7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8cad38c4-b028-47bd-882e-beb246cd7201"",
                    ""path"": ""<Keyboard>/f8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar_F8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard and Mouse"",
            ""bindingGroup"": ""Keyboard and Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Keyboard
        m_Keyboard = asset.FindActionMap("Keyboard", throwIfNotFound: true);
        m_Keyboard_PressF = m_Keyboard.FindAction("PressF", throwIfNotFound: true);
        m_Keyboard_Hotbar_F1 = m_Keyboard.FindAction("Hotbar_F1", throwIfNotFound: true);
        m_Keyboard_Hotbar_F2 = m_Keyboard.FindAction("Hotbar_F2", throwIfNotFound: true);
        m_Keyboard_Hotbar_F3 = m_Keyboard.FindAction("Hotbar_F3", throwIfNotFound: true);
        m_Keyboard_Hotbar_F4 = m_Keyboard.FindAction("Hotbar_F4", throwIfNotFound: true);
        m_Keyboard_Hotbar_F5 = m_Keyboard.FindAction("Hotbar_F5", throwIfNotFound: true);
        m_Keyboard_Hotbar_F6 = m_Keyboard.FindAction("Hotbar_F6", throwIfNotFound: true);
        m_Keyboard_Hotbar_F7 = m_Keyboard.FindAction("Hotbar_F7", throwIfNotFound: true);
        m_Keyboard_Hotbar_F8 = m_Keyboard.FindAction("Hotbar_F8", throwIfNotFound: true);
        m_Keyboard_SwitchCombat = m_Keyboard.FindAction("SwitchCombat", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Keyboard
    private readonly InputActionMap m_Keyboard;
    private IKeyboardActions m_KeyboardActionsCallbackInterface;
    private readonly InputAction m_Keyboard_PressF;
    private readonly InputAction m_Keyboard_Hotbar_F1;
    private readonly InputAction m_Keyboard_Hotbar_F2;
    private readonly InputAction m_Keyboard_Hotbar_F3;
    private readonly InputAction m_Keyboard_Hotbar_F4;
    private readonly InputAction m_Keyboard_Hotbar_F5;
    private readonly InputAction m_Keyboard_Hotbar_F6;
    private readonly InputAction m_Keyboard_Hotbar_F7;
    private readonly InputAction m_Keyboard_Hotbar_F8;
    private readonly InputAction m_Keyboard_SwitchCombat;
    public struct KeyboardActions
    {
        private @InputManager m_Wrapper;
        public KeyboardActions(@InputManager wrapper) { m_Wrapper = wrapper; }
        public InputAction @PressF => m_Wrapper.m_Keyboard_PressF;
        public InputAction @Hotbar_F1 => m_Wrapper.m_Keyboard_Hotbar_F1;
        public InputAction @Hotbar_F2 => m_Wrapper.m_Keyboard_Hotbar_F2;
        public InputAction @Hotbar_F3 => m_Wrapper.m_Keyboard_Hotbar_F3;
        public InputAction @Hotbar_F4 => m_Wrapper.m_Keyboard_Hotbar_F4;
        public InputAction @Hotbar_F5 => m_Wrapper.m_Keyboard_Hotbar_F5;
        public InputAction @Hotbar_F6 => m_Wrapper.m_Keyboard_Hotbar_F6;
        public InputAction @Hotbar_F7 => m_Wrapper.m_Keyboard_Hotbar_F7;
        public InputAction @Hotbar_F8 => m_Wrapper.m_Keyboard_Hotbar_F8;
        public InputAction @SwitchCombat => m_Wrapper.m_Keyboard_SwitchCombat;
        public InputActionMap Get() { return m_Wrapper.m_Keyboard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(KeyboardActions set) { return set.Get(); }
        public void SetCallbacks(IKeyboardActions instance)
        {
            if (m_Wrapper.m_KeyboardActionsCallbackInterface != null)
            {
                @PressF.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnPressF;
                @PressF.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnPressF;
                @PressF.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnPressF;
                @Hotbar_F1.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F1;
                @Hotbar_F1.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F1;
                @Hotbar_F1.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F1;
                @Hotbar_F2.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F2;
                @Hotbar_F2.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F2;
                @Hotbar_F2.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F2;
                @Hotbar_F3.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F3;
                @Hotbar_F3.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F3;
                @Hotbar_F3.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F3;
                @Hotbar_F4.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F4;
                @Hotbar_F4.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F4;
                @Hotbar_F4.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F4;
                @Hotbar_F5.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F5;
                @Hotbar_F5.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F5;
                @Hotbar_F5.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F5;
                @Hotbar_F6.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F6;
                @Hotbar_F6.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F6;
                @Hotbar_F6.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F6;
                @Hotbar_F7.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F7;
                @Hotbar_F7.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F7;
                @Hotbar_F7.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F7;
                @Hotbar_F8.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F8;
                @Hotbar_F8.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F8;
                @Hotbar_F8.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHotbar_F8;
                @SwitchCombat.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnSwitchCombat;
                @SwitchCombat.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnSwitchCombat;
                @SwitchCombat.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnSwitchCombat;
            }
            m_Wrapper.m_KeyboardActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PressF.started += instance.OnPressF;
                @PressF.performed += instance.OnPressF;
                @PressF.canceled += instance.OnPressF;
                @Hotbar_F1.started += instance.OnHotbar_F1;
                @Hotbar_F1.performed += instance.OnHotbar_F1;
                @Hotbar_F1.canceled += instance.OnHotbar_F1;
                @Hotbar_F2.started += instance.OnHotbar_F2;
                @Hotbar_F2.performed += instance.OnHotbar_F2;
                @Hotbar_F2.canceled += instance.OnHotbar_F2;
                @Hotbar_F3.started += instance.OnHotbar_F3;
                @Hotbar_F3.performed += instance.OnHotbar_F3;
                @Hotbar_F3.canceled += instance.OnHotbar_F3;
                @Hotbar_F4.started += instance.OnHotbar_F4;
                @Hotbar_F4.performed += instance.OnHotbar_F4;
                @Hotbar_F4.canceled += instance.OnHotbar_F4;
                @Hotbar_F5.started += instance.OnHotbar_F5;
                @Hotbar_F5.performed += instance.OnHotbar_F5;
                @Hotbar_F5.canceled += instance.OnHotbar_F5;
                @Hotbar_F6.started += instance.OnHotbar_F6;
                @Hotbar_F6.performed += instance.OnHotbar_F6;
                @Hotbar_F6.canceled += instance.OnHotbar_F6;
                @Hotbar_F7.started += instance.OnHotbar_F7;
                @Hotbar_F7.performed += instance.OnHotbar_F7;
                @Hotbar_F7.canceled += instance.OnHotbar_F7;
                @Hotbar_F8.started += instance.OnHotbar_F8;
                @Hotbar_F8.performed += instance.OnHotbar_F8;
                @Hotbar_F8.canceled += instance.OnHotbar_F8;
                @SwitchCombat.started += instance.OnSwitchCombat;
                @SwitchCombat.performed += instance.OnSwitchCombat;
                @SwitchCombat.canceled += instance.OnSwitchCombat;
            }
        }
    }
    public KeyboardActions @Keyboard => new KeyboardActions(this);
    private int m_KeyboardandMouseSchemeIndex = -1;
    public InputControlScheme KeyboardandMouseScheme
    {
        get
        {
            if (m_KeyboardandMouseSchemeIndex == -1) m_KeyboardandMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard and Mouse");
            return asset.controlSchemes[m_KeyboardandMouseSchemeIndex];
        }
    }
    public interface IKeyboardActions
    {
        void OnPressF(InputAction.CallbackContext context);
        void OnHotbar_F1(InputAction.CallbackContext context);
        void OnHotbar_F2(InputAction.CallbackContext context);
        void OnHotbar_F3(InputAction.CallbackContext context);
        void OnHotbar_F4(InputAction.CallbackContext context);
        void OnHotbar_F5(InputAction.CallbackContext context);
        void OnHotbar_F6(InputAction.CallbackContext context);
        void OnHotbar_F7(InputAction.CallbackContext context);
        void OnHotbar_F8(InputAction.CallbackContext context);
        void OnSwitchCombat(InputAction.CallbackContext context);
    }
}
